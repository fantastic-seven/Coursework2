  
  Collecting Stars:
  
    function update()
    {
      if(cursors.left.isDown)
      {
        player.setVelocityX(-50)

        player.anims.play("left",true)
      }
      else if(cursors.right.isDown)
      {
        player.setVelocityX(50)

        player.anims.play("right",true)
      }
      else{
        player.setVelocityX(0)

        player.anims.play('turn')
      }
      
      if(cursors.up.isDown && player.body.touching.down){
        player.setVelocityY(-400)
      }

      //update the server
      if (otherPlayer != null)
        server.SendMessage("move", {'x':player.x, 'y':player.y});
}

Main.js
let config = {
  type : Phaser.AUTO,
  width : 800,
  height : 600,
  physics : {
    default : 'arcade',
    arcade : {
      gravity : {y : 200}
    }
  },
  scene : {
    preload,
    create
  }
}

let game = new Phaser.Game(config)

function preload(){
  this.load.setBaseURL("http://labs.phaser.io")
  this.load.image('sky', 'assets/skies/sky.png')
}

function create(){
  this.add.image(400,300,'sky')
  let particles = this.add.particles('red')
  let emitter = particles.createEmitter({
    speed : 100,
    scale : {start : 1,end : 0},
    blendMode : 'ADD'
  })
  let logo = this.physics.add.image(400,100,'logo')

  logo.setVelocity(100,200)
  logo.setBounce(1,1)
  logo.setCollideWorldBounds(true)

  emitter.startFollow(logo)
}





Breakout:

function ballHitBrick (_ball, _brick) {

    _brick.kill();

    score += 10;

    scoreText.text = 'score: ' + score;

    //  Are they any bricks left?
    if (bricks.countLiving() == 0)
    {
        //  New level starts
        score += 1000;
        scoreText.text = 'score: ' + score;
        introText.text = '- Next Level -';

        //  Let's move the ball back to the paddle
        ballOnPaddle = true;
        ball.body.velocity.set(0);
        ball.x = paddle.x + 16;
        ball.y = paddle.y - 16;
        ball.animations.stop();

        //  And bring the bricks back from the dead :)
        bricks.callAll('revive');
    }

}
