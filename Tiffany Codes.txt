Theses are Tiffany's codes for our Coursework2 final game: Collecting stars!!!
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <title>Collecting stars!!!</title>
  <script src="js/phaser.min.js"></script>
  <!-- Load external libraries -->
  <script src="https://ssmms.herokuapp.com/api"></script>

</head>
<body>

   <!-- Load all our scenes here -->
  <script src="js/GameScene.js"></script>
</body>
</html>

    function create(){
      //init online functionality
      server = new SSMMS(true);
      
      //connect our handlers
      server.onMessage = MessageReceived;
      server.onRoomsReceived = RoomsReceived;
      server.onUserDisconnected = UserDisconnected;
      server.onError = ErrorReceived;

      server.Connect(server);
      server.GetRooms();

      this.add.image(400,300,"sky")
      platforms = this.physics.add.staticGroup()
      platforms.create(400,568,"ground").setScale(2,2).refreshBody()
      platforms.create(600,400,"ground")
      platforms.create(-10,300,"ground")
      platforms.create(680,200,"ground")
      platforms.create(0,100,"ground")
      platforms.create(50,450,"ground")

  
      player = this.physics.add.sprite(100,450,'dude') 
      player.setBounce(0.2)
      player.setCollideWorldBounds(true)
      this.physics.add.collider(player,platforms)

       this.anims.create({
        key : 'left',
        frames : this.anims.generateFrameNumbers('dude',{start : 0,end : 3}),
        frameRate : 10,
        repeat : -1
      })

      this.anims.create({
        key : 'turn',
        frames : [{key : 'dude',frame : 6}],
        frameRate : 20
      })

      this.anims.create({
        key : 'right',
        frames : this.anims.generateFrameNumbers('dude',{
          start : 5,end : 8
        }),
        frameRate : 10,
        repeat : -1
      })
      cursors = this.input.keyboard.createCursorKeys()

      stars = this.physics.add.group({
        key : 'star',
        repeat : 11,
        setXY : {x: 20,y: 0,stepX:70}
      })

      stars.children.iterate(function(child){
        //Set the Collision results
        child.setBounceY(Phaser.Math.FloatBetween(0.4,0.8))
      })

      this.physics.add.collider(stars,platforms)
      this.physics.add.overlap(player,stars,collectStar,null,this)
      bombs = this.physics.add.group()
      scoreText = this.add.text(16,16,"score : 0",{fontSize: '32px',fill: "#000"})
      this.physics.add.collider(bombs,platforms)
      this.physics.add.collider(player,bombs,bombbbb,null,this)
    }

Theses are Tiffany's codes for our Coursework2 first but failed game: Breakout!!!
function create() {

    game.physics.startSystem(Phaser.Physics.ARCADE);

    //  We check bounds collisions against all walls other than the bottom one
    game.physics.arcade.checkCollision.down = false;

    s = game.add.tileSprite(0, 0, 800, 600, 'starfield');

    bricks = game.add.group();
    bricks.enableBody = true;
    bricks.physicsBodyType = Phaser.Physics.ARCADE;

    var brick;

    for (var y = 0; y < 4; y++)
    {
        for (var x = 0; x < 15; x++)
        {
            brick = bricks.create(120 + (x * 36), 100 + (y * 52), 'breakout', 'brick_' + (y+1) + '_1.png');
            brick.body.bounce.set(1);
            brick.body.immovable = true;
        }
    }

    paddle = game.add.sprite(game.world.centerX, 500, 'breakout', 'paddle_big.png');
    paddle.anchor.setTo(0.5, 0.5);

    game.physics.enable(paddle, Phaser.Physics.ARCADE);

    paddle.body.collideWorldBounds = true;
    paddle.body.bounce.set(1);
    paddle.body.immovable = true;

    ball = game.add.sprite(game.world.centerX, paddle.y - 16, 'breakout', 'ball_1.png');
    ball.anchor.set(0.5);
    ball.checkWorldBounds = true;

    game.physics.enable(ball, Phaser.Physics.ARCADE);

    ball.body.collideWorldBounds = true;
    ball.body.bounce.set(1);

    ball.animations.add('spin', [ 'ball_1.png', 'ball_2.png', 'ball_3.png', 'ball_4.png', 'ball_5.png' ], 50, true, false);

    ball.events.onOutOfBounds.add(ballLost, this);

    scoreText = game.add.text(32, 550, 'score: 0', { font: "20px Arial", fill: "#ffffff", align: "left" });
    livesText = game.add.text(680, 550, 'lives: 3', { font: "20px Arial", fill: "#ffffff", align: "left" });
    introText = game.add.text(game.world.centerX, 400, '- click to start -', { font: "40px Arial", fill: "#ffffff", align: "center" });
    introText.anchor.setTo(0.5, 0.5);

    game.input.onDown.add(releaseBall, this);

}

    

